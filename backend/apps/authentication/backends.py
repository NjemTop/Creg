from mozilla_django_oidc.auth import OIDCAuthenticationBackend
from django.contrib.auth.models import User, Group
import logging

logger = logging.getLogger(__name__)

class CustomOIDCBackend(OIDCAuthenticationBackend):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π OIDC-–±—ç–∫–µ–Ω–¥ –¥–ª—è Django, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ Keycloak."""

    # –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏
    ALLOWED_GROUPS = {"support", "manager", "pmo", "product", "dev", "admin"}
    ADMIN_GROUPS = {"admin"}  # –ì—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç —Å—É–ø–µ—Ä–ø—Ä–∞–≤–∞

    def filter_users_by_claims(self, claims):
        """–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email."""
        return User.objects.filter(email=claims.get("email"))

    def create_user(self, claims):
        """–°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –≥—Ä—É–ø–ø—ã."""
        user = User.objects.create_user(
            username=claims.get("preferred_username"),
            email=claims.get("email"),
            first_name=claims.get("given_name", ""),
            last_name=claims.get("family_name", ""),
            password=None,  # Django –Ω–µ —Ö—Ä–∞–Ω–∏—Ç –ø–∞—Ä–æ–ª—å –¥–ª—è OIDC-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        )

        self._assign_groups(user, claims.get("groups", []))
        return user

    def update_user(self, user, claims):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—Ö–æ–¥–µ."""
        self._assign_groups(user, claims.get("groups", []))
        return user

    def _assign_groups(self, user, groups):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Django-–≥—Ä—É–ø–ø—ã –∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–≤–∞."""
        if not groups:
            logger.warning(f"‚ö†Ô∏è {user.username} –∑–∞—à—ë–ª –±–µ–∑ –≥—Ä—É–ø–ø! –î–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.")
            return

        groups_set = set(groups)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ
        valid_groups = groups_set & self.ALLOWED_GROUPS
        unknown_groups = groups_set - self.ALLOWED_GROUPS

        # –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã
        if unknown_groups:
            logger.warning(f"‚ö†Ô∏è {user.username} –∏–º–µ–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã: {unknown_groups}. –û–Ω–∏ –Ω–µ –±—É–¥—É—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω—ã.")

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–≤–∞ –ø–µ—Ä–µ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º
        user.is_staff = user.is_superuser = False

        # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã
        for group_name in valid_groups:
            group, _ = Group.objects.get_or_create(name=group_name)
            user.groups.add(group)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≥—Ä—É–ø–ø—ã
        if groups_set & self.ADMIN_GROUPS:
            user.is_staff = user.is_superuser = True
            logger.info(f"‚ö° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username} –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø–æ–ª–Ω—ã–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")

        user.save()
        logger.info(f"üë§ {user.username} —Ç–µ–ø–µ—Ä—å —Å–æ—Å—Ç–æ–∏—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö: {valid_groups}")
