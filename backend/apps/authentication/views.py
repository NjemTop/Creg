import logging
from django.shortcuts import render, redirect
from django.contrib.auth import authenticate, login, logout
from django.contrib import messages
from django.conf import settings
from django.urls import reverse
from django.contrib.sites.models import Site
from urllib.parse import urljoin, urlencode
from apps.configurations.config_loader import get_oidc_settings

logger = logging.getLogger(__name__)


def login_view(request):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞. –ü–µ—Ä–µ–¥–∞—ë–º –≤ —à–∞–±–ª–æ–Ω, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Keycloak"""
    oidc_settings = get_oidc_settings()
    return render(request, "authentication/login.html", {"oidc_enabled": bool(oidc_settings)})

def logout_view(request):
    """–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã: –µ—Å–ª–∏ –≤—Ö–æ–¥ –±—ã–ª —á–µ—Ä–µ–∑ Keycloak, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ Keycloak logout, –∏–Ω–∞—á–µ ‚Äî –ª–æ–∫–∞–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥."""

    base_url = f"{Site.objects.get_current().domain}"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–æ—Å–æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    is_oidc_session = "oidc_access_token" in request.session
    id_token = request.session.get("oidc_id_token")

    username = request.user.username if request.user.is_authenticated else "–ê–Ω–æ–Ω–∏–º"

    logger.info(f"üîÑ –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}, —á–µ—Ä–µ–∑ OIDC: {is_oidc_session}")

    logout(request)  # –í—ã—Ö–æ–¥ –∏–∑ Django-—Å–µ—Å—Å–∏–∏

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª —á–µ—Ä–µ–∑ Keycloak ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ OIDC logout
    if is_oidc_session and id_token:
        logout_url = (
            f"{settings.OIDC_OP_LOGOUT_ENDPOINT}?"
            + urlencode({"post_logout_redirect_uri": base_url, "id_token_hint": id_token})
        )
        logger.info(f"üîÄ OIDC-logout: —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ {logout_url}")
        return redirect(logout_url)

    # –ï—Å–ª–∏ OIDC –≤—ã–∫–ª—é—á–µ–Ω –∏–ª–∏ –≤—Ö–æ–¥ –±—ã–ª –ª–æ–∫–∞–ª—å–Ω—ã–π ‚Üí —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    logger.info("üè† –õ–æ–∫–∞–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥: —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
    return redirect("/")

def oidc_login(request):
    """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Keycloak."""
    if not settings.OIDC_OP_AUTHORIZATION_ENDPOINT:
        logger.warning("‚ö†Ô∏è OIDC –æ—Ç–∫–ª—é—á–µ–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π –≤—Ö–æ–¥")
        return redirect("/auth/login/")

    return redirect(reverse("oidc_authentication_init"))

def local_login_view(request):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Django"""
    if request.method == "POST":
        username = request.POST.get("username")
        password = request.POST.get("password")
        user_ip = request.META.get("REMOTE_ADDR", "unknown")  # –ü–æ–ª—É—á–∞–µ–º IP

        logger.info(f"üîë –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞: username={username}, IP={user_ip}")

        user = authenticate(request, username=username, password=password)

        if user is not None:
            logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥: {user.username}, IP={user_ip}, is_active={user.is_active}")
            login(request, user)
            messages.success(request, "–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏!")
            return redirect("/")
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            from django.contrib.auth.models import User
            if User.objects.filter(username=username).exists():
                logger.warning(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: username={username}, –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å, IP={user_ip}")
            else:
                logger.warning(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: username={username}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, IP={user_ip}")
            messages.error(request, "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!")

    return redirect("/auth/login/")
