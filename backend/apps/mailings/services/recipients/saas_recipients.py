from apps.mailings.services.recipients.base import RecipientStrategy
from apps.clients.models import Client
from apps.mailings.models import Mailing
import logging
from apps.mailings.logging_utils import log_event, send_ws_event


logger = logging.getLogger(__name__)

class SaaSRecipientStrategy(RecipientStrategy):
    def execute(self):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É —Å –æ—Ç–º–µ—Ç–∫–æ–π "SaaS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ".

        –§–∏–ª—å—Ç—Ä—É–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å —Ñ–ª–∞–≥–æ–º `saas=True`. –ü–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä—É–µ—Ç, 
        –Ω–æ –≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

        Returns:
            int: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ SaaS, –∫–æ—Ç–æ—Ä—ã–º –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∞.
        """
        clients = Client.objects.filter(contact_status=True, saas=True)
        count = clients.count()

        for client in clients:
            # TODO: –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ - create_ticket()
            logger.info(f"[SaaS] –ö–ª–∏–µ–Ω—Ç {client.client_name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {self.mailing.saas_update_time}")
            log_event(self.mailing.id,
                "info", f"[SaaS] –ö–ª–∏–µ–Ω—Ç {client.client_name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {self.mailing.saas_update_time}")
            send_ws_event(self.mailing.id,
                "info", {"message": f"üõ†Ô∏è [SaaS] –ö–ª–∏–µ–Ω—Ç {client.client_name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {self.mailing.saas_update_time}"})

        self.mailing.recipients_generated = True
        self.mailing.save()
        return count
