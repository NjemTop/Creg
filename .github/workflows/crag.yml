name: Django CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.12.8-slim"]

    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      CSRF_TRUSTED_ORIGINS: http://localhost
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
      EMAIL_HOST_PROD: ${{ secrets.EMAIL_HOST_PROD }}
      EMAIL_PORT_PROD: ${{ secrets.EMAIL_PORT_PROD }}
      EMAIL_HOST_USER_PROD: ${{ secrets.EMAIL_HOST_USER_PROD }}
      EMAIL_HOST_PASSWORD_PROD: ${{ secrets.EMAIL_HOST_PASSWORD_PROD }}
      DEFAULT_FROM_EMAIL_PROD: ${{ secrets.DEFAULT_FROM_EMAIL_PROD }}

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Шаг для установки зависимостей LDAP
      - name: Install LDAP dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libldap2-dev libsasl2-dev libssl-dev gcc

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Create Log Directory and Files
        run: |
          mkdir -p logs
          touch logs/debug.log logs/info.log logs/warning.log logs/error.log logs/critical.log logs/celery_info.log logs/celery_error.log logs/scripts_errors.log

      - name: Apply Database Migrations
        run: |
          cd backend
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput

      - name: Run Tests
        run: |
          cd backend
          python manage.py test
